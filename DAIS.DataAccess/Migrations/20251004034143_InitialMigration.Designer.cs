// <auto-generated />
using System;
using DAIS.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAIS.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251004034143_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAIS.DataAccess.Entities.Agency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgencyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgencyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgencyName")
                        .IsUnique()
                        .HasFilter("[AgencyName] IS NOT NULL");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.AppBackupDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BackupDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("BackupLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BackupSize")
                        .HasColumnType("int");

                    b.Property<string>("BackupStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackupType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppBackupDetails");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.ApprovalStatusHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionRequiredByUserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusChangeBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("ApprovalStatusHistory");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.AuditLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DateTime");

                    b.HasIndex("TableName");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.BulkUploadDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionRequiredByUserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NoOfRecords")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BulkUploadDetails");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MaterialTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("CategoryName", "ProjectId")
                        .IsUnique()
                        .HasFilter("[CategoryName] IS NOT NULL");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Contractor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MaterialTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductsDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ContractorName")
                        .IsUnique()
                        .HasFilter("[ContractorName] IS NOT NULL");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DesignDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesignDocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("DesignDocuments");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Division", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DivisionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DivisionName")
                        .IsUnique()
                        .HasFilter("[DivisionName] IS NOT NULL");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionLocationMaterialTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IssueDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OnBoardedDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OnBoardedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RecieveLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueDivisionId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OnBoardedDivisionId");

                    b.HasIndex("RecieveLocationId");

                    b.ToTable("DivisionLocationMaterialTransfers");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionLocationMaterialTransferApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DivisionLocationMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecieverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DivisionLocationMaterialTransferId");

                    b.HasIndex("IssuerId");

                    b.HasIndex("RecieverId");

                    b.ToTable("DivisionLocationMaterialTransferApprovals");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionLocationMaterialTransferTrancation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DivisionMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionMaterialTransferId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MaterialId");

                    b.ToTable("DivisionLocationMaterialTransferTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionMaterialTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IssueDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OnBoardedDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OnBoardedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RecieveDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueDivisionId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OnBoardedDivisionId");

                    b.HasIndex("RecieveDivisionId");

                    b.ToTable("DivisionMaterialTransfers");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionMaterialTransferApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DivisionMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecieverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DivisionMaterialTransferId");

                    b.HasIndex("IssuerId");

                    b.HasIndex("RecieverId");

                    b.ToTable("DivisionMaterialTransferApprovals");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionMaterialTransferTrancation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DivisionMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("DivisionMaterialTransferId");

                    b.HasIndex("MaterialId");

                    b.ToTable("DivisionMaterialTransferTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IssueDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OnBoardedDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OnBoardedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid>("TargetSubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueDivisionId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OnBoardedDivisionId");

                    b.HasIndex("TargetSubDivisionId");

                    b.ToTable("DivisionToSubDivisionMaterialTransfers");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransferApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DivisionToSubDivisionMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecieverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DivisionToSubDivisionMaterialTransferId");

                    b.HasIndex("IssuerId");

                    b.HasIndex("RecieverId");

                    b.ToTable("DivisionToSubDivisionMaterialTransferApprovals");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransferTrancation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DivisionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DivisionToSubDivisionMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubDivisionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("DivisionToSubDivisionMaterialTransferId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SubDivisionId");

                    b.ToTable("DivisionToSubDivisionMaterialTransferTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentName")
                        .IsUnique()
                        .HasFilter("[DocumentName] IS NOT NULL");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.ExcelReaderMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExcelReaderMetadata");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.LocationOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("LocationOperationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationOperationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("System")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubDivisionId");

                    b.HasIndex("WorkPackageId");

                    b.HasIndex("LocationOperationName", "System")
                        .IsUnique()
                        .HasFilter("[LocationOperationName] IS NOT NULL AND [System] IS NOT NULL");

                    b.ToTable("LocationOperations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportantDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("MaterialTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductsDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerName")
                        .IsUnique()
                        .HasFilter("[ManufacturerName] IS NOT NULL");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuilkUploadDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BulkUploadDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CommissioningDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ContractorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfSupply")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DesignLifeDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndPeriodLifeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRehabilitation")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationRFId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialQty")
                        .HasColumnType("int");

                    b.Property<int>("MaterialStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("MaterialTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RehabilitationMaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("System")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("YearOfInstallation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BulkUploadDetailId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ContractorId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApproverComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApproverPreviousComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReveiwerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ReviewedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewerComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewerPreviousComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmitterComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmitterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ReveiwerId");

                    b.HasIndex("SubmitterId");

                    b.ToTable("MaterialApprovals");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialDocuments");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialHardware", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BiosDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chipset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfManufacturer")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiskDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HardwareDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HarwareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NetworkDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerialNo")
                        .HasColumnType("int");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SupplierId");

                    b.ToTable("MaterialHardwares");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialIssueRecieveVoucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IssueLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OnBoardedLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OnBoardedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RecieveLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueLocationId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OnBoardedLocationId");

                    b.HasIndex("RecieveLocationId");

                    b.ToTable("MaterialIssueRecieveVouchers");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialMaintenance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgencyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AgencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaintenanceDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaintenanceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MaintenanceStartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MaterialServiceProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("MaterialServiceProviderId");

                    b.ToTable("MaterialMaintenances");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MeasurementCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeasurementName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementName")
                        .IsUnique()
                        .HasFilter("[MeasurementName] IS NOT NULL");

                    b.ToTable("MaterialMeasurements");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialServiceProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContractorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceProviderDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ServiceProviders");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialSoftware", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SupplierId");

                    b.ToTable("MaterialSoftwares");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TypeName", "ProjectId")
                        .IsUnique()
                        .HasFilter("[TypeName] IS NOT NULL");

                    b.ToTable("MaterialTypes");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialVoucherTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialIssueRecieveVoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("MaterialIssueRecieveVoucherId");

                    b.ToTable("MaterialVoucherTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialVoucherTransactionApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("MaterialIssueRecieveVoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecieverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IssuerId");

                    b.HasIndex("MaterialIssueRecieveVoucherId");

                    b.HasIndex("RecieverId");

                    b.ToTable("MaterialVoucherTrancationApprovals");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialWarranty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DLPEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DLPStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtended")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastRenewalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NoOfMonths")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarrantyDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WarrantyEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WarrantyStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialWarranties");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AgencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("ProjectName")
                        .IsUnique()
                        .HasFilter("[ProjectName] IS NOT NULL");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.RoleFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleFeatures");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDivisionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDivisionName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("SubDivisionName", "DivisionId")
                        .IsUnique()
                        .HasFilter("[SubDivisionName] IS NOT NULL");

                    b.ToTable("SubDivisions");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionMaterialTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IssueSubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OnBoardedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("OnBoardedSubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecieveSubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueSubDivisionId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OnBoardedSubDivisionId");

                    b.HasIndex("RecieveSubDivisionId");

                    b.ToTable("SubDivisionMaterialTransfers");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionMaterialTransferApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecieverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("SubDivisionMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IssuerId");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SubDivisionMaterialTransferId");

                    b.ToTable("SubDivisionMaterialTransferApprovals");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionMaterialTransferTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("SubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubDivisionMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SubDivisionId");

                    b.HasIndex("SubDivisionMaterialTransferId");

                    b.ToTable("SubDivisionMaterialTransferTransactions");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IssueSubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OnBoardedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("OnBoardedSubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecieveDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueSubDivisionId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OnBoardedSubDivisionId");

                    b.HasIndex("RecieveDivisionId");

                    b.ToTable("SubDivisionToDivisionMaterialTransfers");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransferApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecieverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("SubDivToDivMaterialTransferApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IssuerId");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SubDivToDivMaterialTransferApprovalId");

                    b.ToTable("SubDivisionToDivisionMaterialTransferApprovals");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransferTrancation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DivisionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecievedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("SubDivToDivMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubDivisionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubDivisionToDivisionMaterialTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("SubDivToDivMaterialTransferId");

                    b.HasIndex("SubDivisionId");

                    b.HasIndex("SubDivisionToDivisionMaterialTransferId");

                    b.ToTable("SubDivisionToDivisionMaterialTransferTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MaterialTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductsDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("SupplierName")
                        .IsUnique()
                        .HasFilter("[SupplierName] IS NOT NULL");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInitialLogin")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReportingTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubDivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RegionId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.WorkPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CommencementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractPackageDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LetterOfAcceptanceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("System")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkPackageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPackageName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("WorkPackageName")
                        .IsUnique()
                        .HasFilter("[WorkPackageName] IS NOT NULL");

                    b.ToTable("WorkPackages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Role", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("Role");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.ApprovalStatusHistory", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany("ApprovalStatusHistory")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Category", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.MaterialType", "MaterialType")
                        .WithMany("Categories")
                        .HasForeignKey("MaterialTypeId");

                    b.HasOne("DAIS.DataAccess.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Contractor", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("DAIS.DataAccess.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId");

                    b.Navigation("Category");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DesignDocument", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.WorkPackage", "WorkPackage")
                        .WithMany()
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPackage");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionLocationMaterialTransfer", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Division", "IssueDivision")
                        .WithMany()
                        .HasForeignKey("IssueDivisionId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Division", "OnBoardedDivision")
                        .WithMany()
                        .HasForeignKey("OnBoardedDivisionId");

                    b.HasOne("DAIS.DataAccess.Entities.LocationOperation", "RecieveLocation")
                        .WithMany()
                        .HasForeignKey("RecieveLocationId")
                        .IsRequired();

                    b.Navigation("IssueDivision");

                    b.Navigation("Material");

                    b.Navigation("OnBoardedDivision");

                    b.Navigation("RecieveLocation");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionLocationMaterialTransferApproval", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.DivisionLocationMaterialTransfer", "DivisionLocationMaterialTransfer")
                        .WithMany()
                        .HasForeignKey("DivisionLocationMaterialTransferId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.User", "Issuer")
                        .WithMany()
                        .HasForeignKey("IssuerId");

                    b.HasOne("DAIS.DataAccess.Entities.User", "Reciever")
                        .WithMany()
                        .HasForeignKey("RecieverId");

                    b.Navigation("DivisionLocationMaterialTransfer");

                    b.Navigation("Issuer");

                    b.Navigation("Reciever");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionLocationMaterialTransferTrancation", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.DivisionLocationMaterialTransfer", "DivisionLocationMaterialTransfer")
                        .WithMany("DivisionLocationMaterialTransferTrancations")
                        .HasForeignKey("DivisionMaterialTransferId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.LocationOperation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .IsRequired();

                    b.Navigation("DivisionLocationMaterialTransfer");

                    b.Navigation("Location");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionMaterialTransfer", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Division", "IssueDivision")
                        .WithMany()
                        .HasForeignKey("IssueDivisionId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Division", "OnBoardedDivision")
                        .WithMany()
                        .HasForeignKey("OnBoardedDivisionId");

                    b.HasOne("DAIS.DataAccess.Entities.Division", "RecieveDivision")
                        .WithMany()
                        .HasForeignKey("RecieveDivisionId")
                        .IsRequired();

                    b.Navigation("IssueDivision");

                    b.Navigation("Material");

                    b.Navigation("OnBoardedDivision");

                    b.Navigation("RecieveDivision");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionMaterialTransferApproval", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.DivisionMaterialTransfer", "DivisionMaterialTransfer")
                        .WithMany()
                        .HasForeignKey("DivisionMaterialTransferId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.User", "Issuer")
                        .WithMany()
                        .HasForeignKey("IssuerId");

                    b.HasOne("DAIS.DataAccess.Entities.User", "Reciever")
                        .WithMany()
                        .HasForeignKey("RecieverId");

                    b.Navigation("DivisionMaterialTransfer");

                    b.Navigation("Issuer");

                    b.Navigation("Reciever");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionMaterialTransferTrancation", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.DivisionMaterialTransfer", "DivisionMaterialTransfer")
                        .WithMany("DivisionMaterialTransferTrancations")
                        .HasForeignKey("DivisionMaterialTransferId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("DivisionMaterialTransfer");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransfer", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Division", "IssueDivision")
                        .WithMany()
                        .HasForeignKey("IssueDivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Division", "OnBoardedDivision")
                        .WithMany()
                        .HasForeignKey("OnBoardedDivisionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "TargetSubDivision")
                        .WithMany()
                        .HasForeignKey("TargetSubDivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IssueDivision");

                    b.Navigation("Material");

                    b.Navigation("OnBoardedDivision");

                    b.Navigation("TargetSubDivision");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransferApproval", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransfer", "DivisionToSubDivisionMaterialTransfer")
                        .WithMany()
                        .HasForeignKey("DivisionToSubDivisionMaterialTransferId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.User", "Issuer")
                        .WithMany()
                        .HasForeignKey("IssuerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DAIS.DataAccess.Entities.User", "Reciever")
                        .WithMany()
                        .HasForeignKey("RecieverId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DivisionToSubDivisionMaterialTransfer");

                    b.Navigation("Issuer");

                    b.Navigation("Reciever");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransferTrancation", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransfer", "DivisionToSubDivisionMaterialTransfer")
                        .WithMany("DivisionToSubDivisionMaterialTransferTrancation")
                        .HasForeignKey("DivisionToSubDivisionMaterialTransferId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "SubDivision")
                        .WithMany()
                        .HasForeignKey("SubDivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("DivisionToSubDivisionMaterialTransfer");

                    b.Navigation("Material");

                    b.Navigation("SubDivision");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.LocationOperation", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "SubDivision")
                        .WithMany()
                        .HasForeignKey("SubDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.WorkPackage", "WorkPackage")
                        .WithMany()
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubDivision");

                    b.Navigation("WorkPackage");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Manufacturer", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("DAIS.DataAccess.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId");

                    b.Navigation("Category");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Material", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.BulkUploadDetail", "BulkUploadDetail")
                        .WithMany()
                        .HasForeignKey("BulkUploadDetailId");

                    b.HasOne("DAIS.DataAccess.Entities.Category", "Category")
                        .WithMany("Materials")
                        .HasForeignKey("CategoryId");

                    b.HasOne("DAIS.DataAccess.Entities.Contractor", "Contractor")
                        .WithMany("Materials")
                        .HasForeignKey("ContractorId");

                    b.HasOne("DAIS.DataAccess.Entities.Division", null)
                        .WithMany("Assets")
                        .HasForeignKey("DivisionId");

                    b.HasOne("DAIS.DataAccess.Entities.LocationOperation", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationId");

                    b.HasOne("DAIS.DataAccess.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Assets")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("DAIS.DataAccess.Entities.MaterialType", "MaterialType")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialTypeId");

                    b.HasOne("DAIS.DataAccess.Entities.MaterialMeasurement", "Measurement")
                        .WithMany()
                        .HasForeignKey("MeasurementId");

                    b.HasOne("DAIS.DataAccess.Entities.Region", "Region")
                        .WithMany("Assets")
                        .HasForeignKey("RegionId");

                    b.HasOne("DAIS.DataAccess.Entities.Supplier", "Supplier")
                        .WithMany("Materials")
                        .HasForeignKey("SupplierId");

                    b.HasOne("DAIS.DataAccess.Entities.WorkPackage", "WorkPackage")
                        .WithMany()
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BulkUploadDetail");

                    b.Navigation("Category");

                    b.Navigation("Contractor");

                    b.Navigation("Location");

                    b.Navigation("Manufacturer");

                    b.Navigation("MaterialType");

                    b.Navigation("Measurement");

                    b.Navigation("Region");

                    b.Navigation("Supplier");

                    b.Navigation("WorkPackage");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialApproval", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany("MaterialApprovals")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.User", "Reveiwer")
                        .WithMany()
                        .HasForeignKey("ReveiwerId");

                    b.HasOne("DAIS.DataAccess.Entities.User", "Submitter")
                        .WithMany()
                        .HasForeignKey("SubmitterId");

                    b.Navigation("Approver");

                    b.Navigation("Material");

                    b.Navigation("Reveiwer");

                    b.Navigation("Submitter");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialDocument", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.DocumentType", "DocumentType")
                        .WithMany("MaterialDocuments")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany("MaterialDocuments")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialHardware", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Manufacturer");

                    b.Navigation("Material");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialIssueRecieveVoucher", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.LocationOperation", "IssueLocation")
                        .WithMany()
                        .HasForeignKey("IssueLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.LocationOperation", "OnBoardedLocation")
                        .WithMany()
                        .HasForeignKey("OnBoardedLocationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DAIS.DataAccess.Entities.LocationOperation", "RecieveLocation")
                        .WithMany()
                        .HasForeignKey("RecieveLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IssueLocation");

                    b.Navigation("Material");

                    b.Navigation("OnBoardedLocation");

                    b.Navigation("RecieveLocation");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialMaintenance", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Agency", "Agency")
                        .WithMany()
                        .HasForeignKey("AgencyId");

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.MaterialServiceProvider", null)
                        .WithMany("MaterialMaintenance")
                        .HasForeignKey("MaterialServiceProviderId");

                    b.Navigation("Agency");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialServiceProvider", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Contractor", "Contractor")
                        .WithMany()
                        .HasForeignKey("ContractorId");

                    b.HasOne("DAIS.DataAccess.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Contractor");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialSoftware", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialType", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialVoucherTransaction", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.LocationOperation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.MaterialIssueRecieveVoucher", "MaterialIssueRecieveVoucher")
                        .WithMany("MaterialVoucherTransactions")
                        .HasForeignKey("MaterialIssueRecieveVoucherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Material");

                    b.Navigation("MaterialIssueRecieveVoucher");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialVoucherTransactionApproval", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.User", "Issuer")
                        .WithMany()
                        .HasForeignKey("IssuerId");

                    b.HasOne("DAIS.DataAccess.Entities.MaterialIssueRecieveVoucher", "MaterialIssueRecieveVoucher")
                        .WithMany()
                        .HasForeignKey("MaterialIssueRecieveVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.User", "Reciever")
                        .WithMany()
                        .HasForeignKey("RecieverId");

                    b.Navigation("Issuer");

                    b.Navigation("MaterialIssueRecieveVoucher");

                    b.Navigation("Reciever");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialWarranty", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Project", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Agency", "Agency")
                        .WithMany()
                        .HasForeignKey("AgencyId");

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.RoleFeature", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Role", "Role")
                        .WithMany("RoleFeatures")
                        .HasForeignKey("RoleId");

                    b.Navigation("Feature");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivision", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionMaterialTransfer", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "IssueSubDivision")
                        .WithMany()
                        .HasForeignKey("IssueSubDivisionId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "OnBoardedSubDivision")
                        .WithMany()
                        .HasForeignKey("OnBoardedSubDivisionId");

                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "RecieveSubDivision")
                        .WithMany()
                        .HasForeignKey("RecieveSubDivisionId")
                        .IsRequired();

                    b.Navigation("IssueSubDivision");

                    b.Navigation("Material");

                    b.Navigation("OnBoardedSubDivision");

                    b.Navigation("RecieveSubDivision");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionMaterialTransferApproval", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.User", "Issuer")
                        .WithMany()
                        .HasForeignKey("IssuerId");

                    b.HasOne("DAIS.DataAccess.Entities.User", "Reciever")
                        .WithMany()
                        .HasForeignKey("RecieverId");

                    b.HasOne("DAIS.DataAccess.Entities.SubDivisionMaterialTransfer", "SubDivisionMaterialTransfer")
                        .WithMany()
                        .HasForeignKey("SubDivisionMaterialTransferId")
                        .IsRequired();

                    b.Navigation("Issuer");

                    b.Navigation("Reciever");

                    b.Navigation("SubDivisionMaterialTransfer");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionMaterialTransferTransaction", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "SubDivision")
                        .WithMany()
                        .HasForeignKey("SubDivisionId")
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.SubDivisionMaterialTransfer", "SubDivisionMaterialTransfer")
                        .WithMany("SubDivisionMaterialTransferTrancations")
                        .HasForeignKey("SubDivisionMaterialTransferId")
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("SubDivision");

                    b.Navigation("SubDivisionMaterialTransfer");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransfer", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "IssueSubDivision")
                        .WithMany()
                        .HasForeignKey("IssueSubDivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "OnBoardedSubDivision")
                        .WithMany()
                        .HasForeignKey("OnBoardedSubDivisionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DAIS.DataAccess.Entities.Division", "RecieveDivision")
                        .WithMany()
                        .HasForeignKey("RecieveDivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IssueSubDivision");

                    b.Navigation("Material");

                    b.Navigation("OnBoardedSubDivision");

                    b.Navigation("RecieveDivision");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransferApproval", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.User", "Issuer")
                        .WithMany()
                        .HasForeignKey("IssuerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DAIS.DataAccess.Entities.User", "Reciever")
                        .WithMany()
                        .HasForeignKey("RecieverId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransfer", "SubDivisionToDivisionMaterialTransfer")
                        .WithMany()
                        .HasForeignKey("SubDivToDivMaterialTransferApprovalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Issuer");

                    b.Navigation("Reciever");

                    b.Navigation("SubDivisionToDivisionMaterialTransfer");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransferTrancation", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransfer", "SubDivisionToDivisionMaterialTransfer")
                        .WithMany()
                        .HasForeignKey("SubDivToDivMaterialTransferId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.SubDivision", "SubDivision")
                        .WithMany()
                        .HasForeignKey("SubDivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransfer", null)
                        .WithMany("SubDivisionToDivisionMaterialTransferTrancations")
                        .HasForeignKey("SubDivisionToDivisionMaterialTransferId");

                    b.Navigation("Division");

                    b.Navigation("Material");

                    b.Navigation("SubDivision");

                    b.Navigation("SubDivisionToDivisionMaterialTransfer");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Supplier", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("DAIS.DataAccess.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId");

                    b.Navigation("Category");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.User", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("DAIS.DataAccess.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Project");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.WorkPackage", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAIS.DataAccess.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DAIS.DataAccess.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Category", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Contractor", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Division", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionLocationMaterialTransfer", b =>
                {
                    b.Navigation("DivisionLocationMaterialTransferTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionMaterialTransfer", b =>
                {
                    b.Navigation("DivisionMaterialTransferTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DivisionToSubDivisionMaterialTransfer", b =>
                {
                    b.Navigation("DivisionToSubDivisionMaterialTransferTrancation");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.DocumentType", b =>
                {
                    b.Navigation("MaterialDocuments");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.LocationOperation", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Manufacturer", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Material", b =>
                {
                    b.Navigation("ApprovalStatusHistory");

                    b.Navigation("MaterialApprovals");

                    b.Navigation("MaterialDocuments");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialIssueRecieveVoucher", b =>
                {
                    b.Navigation("MaterialVoucherTransactions");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialServiceProvider", b =>
                {
                    b.Navigation("MaterialMaintenance");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.MaterialType", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Region", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionMaterialTransfer", b =>
                {
                    b.Navigation("SubDivisionMaterialTransferTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.SubDivisionToDivisionMaterialTransfer", b =>
                {
                    b.Navigation("SubDivisionToDivisionMaterialTransferTrancations");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Supplier", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("DAIS.DataAccess.Entities.Role", b =>
                {
                    b.Navigation("RoleFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
